Dragonfruit Coding Exercise

The following is a question that will require you to answer both with some
textual explanations as well as writing some code.  If you don’t understand
something or find it confusing, write down what you do understand and do your
best to write code as requested.  You may write code in the language of your
choice (C++, python, Go, etc).

The scenario is that you are working with microbiologist researchers who are
investigating cancer in parasitic microorganisms.  The microbiologists have
access to an electron microscope that is capable of capturing very high
resolution images of the microorganisms; each image that is captured by the
microscope is of a single microorganism, which shows up in the image as a single
blob of arbitrary shape (the microscope has zoomed in on each parasite so that
the parasite occupies 25% or more of the total area of the image).  For the
purposes of this exercise, you can assume that each pixel of the image is either
black if it is part of the blob, or white if it is the space surrounding the
blob.  The images are 100,000x100,000 pixels each, and many thousands of such
images will be captured (one for each parasite in a colony).

Additionally, the researchers have injected each of the parasites with a
luminescent dye that permeates their body and lights up different parts of it
(imagine the dye flowing through blood vessels in the parasite).  There is a
separate sensor that captures high resolution images (also 100,000x100,000
pixels) that show where the dye is lit and where it isn’t.  Unfortunately, there
is some leakage of the dye to the space surrounding each parasite, so the dye
sensor sometimes also picks up the presence of dye outside of the parasite.

Note that the dye sensor and the microscope both have the same resolution, and
capture their images at the same instant in time, but produce different images;
the microscope images only show the parasite’s whole body, while the images
produced by the dye sensor only show where there is dye (even if it is outside
of the parasite’s body).

A parasite is deemed to have cancer if the total amount of dye detected in its
body exceeds 10% of the area occupied by the parasite in the image.

The researchers would like to store images of all the parasites that they have
looked at, and in addition they would like to store images of the parasites that
show where the dye is lit up, but only for those parasites that have cancer.  It
is expected that fewer than 0.1% of the parasites will have cancer.

The researchers are looking for you to help them efficiently store and process
all the data that they will be generating.

Questions: 

Come up with efficient data structures to represent both types of
images: those generated by the microscope, and those generated by the dye
sensor.  These need not have the same representation; the only requirement is
that they be compact and take as little storage space as possible.  Explain why
you picked the representation you did for each image type, and if possible
estimate how much storage would be taken by the images.  What is the worst-case
storage size in bytes for each image representation you chose?

Before the researchers give you real images to work with, you would like to test
out any code you write.  To this end, you would like to create “fake” simulated
images and pretend they were captured by the microscope and the dye sensor.
Using the data structures you chose in (1) above, write code to create such
simulated images.  Try and be as realistic in the generated images as possible. 

Using the simulated images generated by the code you wrote for (2) above as
input, write a function to compute whether a parasite has cancer or not. 

You give your code from (3) to the researchers, who run it and find that it is
running too slowly for their liking.  What can you do to improve the execution
speed?  Write the code to implement the fastest possible version you can think
of for the function in (3).

Answers: Use the space below to write your code as well as explanations where
needed.  Take as much space as you need.
